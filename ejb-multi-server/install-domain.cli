# change the provided default configuration for the ejb-multi-server quickstart


# stop the preconfigured server for the domain
batch
# first stop the default servers, block until the server is down
/host=master/server-config=server-one:stop(blocking=true)
/host=master/server-config=server-two:stop(blocking=true)

# remove the default server configuration and server-groups
/host=master/server-config=server-one:remove
/host=master/server-config=server-two:remove
/host=master/server-config=server-three:remove
/server-group=main-server-group:remove
/server-group=other-server-group:remove


# ----  configure the domain for the quickstart ejb-multi-server

# disable the local authentication for applications
/host=master/core-service=management/security-realm=ApplicationRealm/authentication=local:remove

/profile=default/subsystem=ejb3:write-attribute(name=default-missing-method-permissions-deny-access, value=false)
/profile=ha/subsystem=ejb3:write-attribute(name=default-missing-method-permissions-deny-access, value=false)

# Configure the connection from main server to "one" and "two"
# this is to use the application "one" and "two" located at the remote server
#
# add the socket binding to the full-sockets, used by the app-main server
/socket-binding-group=full-sockets/remote-destination-outbound-socket-binding=remote-ejb-1:add(host=localhost, port=8180)
/socket-binding-group=full-sockets/remote-destination-outbound-socket-binding=remote-ejb-2:add(host=localhost, port=8280)

# add the outbound connections to the remoting subsystem of the full-profile used by app-main server
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-1:add(outbound-socket-binding-ref=remote-ejb-1, protocol=http-remoting, security-realm=ejb-security-realm-1, username=quickuser1)
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-1/property=SASL_POLICY_NOANONYMOUS:add(value=false)
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-1/property=SSL_ENABLED:add(value=false)
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-2:add(outbound-socket-binding-ref=remote-ejb-2, protocol=http-remoting, security-realm=ejb-security-realm-2, username=quickuser2)
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-2/property=SASL_POLICY_NOANONYMOUS:add(value=false)
/profile=full/subsystem=remoting/remote-outbound-connection=remote-ejb-connection-2/property=SSL_ENABLED:add(value=false)

# add a pool for SLSB, otherwise the scoped-context EJB invocation will fail b/c can not commit a transaction after executing the SLSB as the bean (with context) is destroyed before !!
/profile=full/subsystem=ejb3:write-attribute(name=default-slsb-instance-pool, value=slsb-strict-max-pool)

# add the security realms with the secret (password base64) values for the server communication
/host=master/core-service=management/security-realm=ejb-security-realm-1:add()
/host=master/core-service=management/security-realm=ejb-security-realm-1/server-identity=secret:add(value=cXVpY2sxMjMr)
/host=master/core-service=management/security-realm=ejb-security-realm-2:add()
/host=master/core-service=management/security-realm=ejb-security-realm-2/server-identity=secret:add(value=cXVpY2srMTIz)

# adjust the default JVM configuration to minimum
/host=master/jvm=default:write-attribute(name=permgen-size, value=64m)
/host=master/jvm=default:write-attribute(name=max-permgen-size, value=128m)

#add the main-server group and the server which handle the standalone client requests
/server-group=quickstart-ejb-multi-main-server:add(profile=full,socket-binding-group=full-sockets)
/server-group=quickstart-ejb-multi-main-server/jvm=default:add()
/host=master/server-config=app-main:add(auto-start=true, group=quickstart-ejb-multi-main-server)

#add the app-server group and the servers for the destination application
# app-one will be a clustered application, so use HA and add two servers
/server-group=quickstart-ejb-multi-appOne-server:add(profile=ha,socket-binding-group=ha-sockets)
/server-group=quickstart-ejb-multi-appOne-server/jvm=default:add()
/host=master/server-config=app-oneA:add(auto-start=true, group=quickstart-ejb-multi-appOne-server, socket-binding-port-offset=100)
/host=master/server-config=app-oneB:add(auto-start=true, group=quickstart-ejb-multi-appOne-server, socket-binding-port-offset=700)

# app two is not a clustered application, so use default profile
/server-group=quickstart-ejb-multi-appTwo-server:add(profile=default,socket-binding-group=standard-sockets)
/server-group=quickstart-ejb-multi-appTwo-server/jvm=default:add()
/host=master/server-config=app-twoA:add(auto-start=true, group=quickstart-ejb-multi-appTwo-server, socket-binding-port-offset=200)
/host=master/server-config=app-twoB:add(auto-start=true, group=quickstart-ejb-multi-appTwo-server, socket-binding-port-offset=800)

# add an alias for app2 bean to demonstrate how to avoid direct dependency to destination app name
/profile=full/subsystem=naming/binding=java\:global\/AliasAppTwo:add(binding-type=lookup, lookup="ejb:jboss-ejb-multi-server-app-two/ejb//AppTwoBean!org.jboss.as.quickstarts.ejb.multi.server.app.AppTwo")



run-batch

# without restart, outside the batch, there are different problems
:restart-servers

# finally start the configured servers
/host=master/server-config=app-oneA:start
/host=master/server-config=app-oneB:start
/host=master/server-config=app-twoA:start
/host=master/server-config=app-twoB:start
/host=master/server-config=app-main:start
